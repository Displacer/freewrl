//AUTOMATICALLY GENERATED BY gencreate.pl.
//DO NOT EDIT!!!!

package vrml;
import vrml.field.*;

public class FWCreateField {
    public static Field createField(String type) {
        type = type.intern();
        if (type == "SFBool")
            return new SFBool();
        else if (type == "SFColor")
            return new SFColor();
        else if (type == "SFFloat")
            return new SFFloat();
        else if (type == "SFImage")
            return new SFImage();
        else if (type == "SFInt32")
            return new SFInt32();
        else if (type == "SFNode")
            return new SFNode();
        else if (type == "SFRotation")
            return new SFRotation();
        else if (type == "SFString")
            return new SFString();
        else if (type == "SFTime")
            return new SFTime();
        else if (type == "SFVec2f")
            return new SFVec2f();
        else if (type == "SFVec3f")
            return new SFVec3f();
        else if (type == "MFColor")
            return new MFColor();
        else if (type == "MFFloat")
            return new MFFloat();
        else if (type == "MFInt32")
            return new MFInt32();
        else if (type == "MFNode")
            return new MFNode();
        else if (type == "MFRotation")
            return new MFRotation();
        else if (type == "MFString")
            return new MFString();
        else if (type == "MFTime")
            return new MFTime();
        else if (type == "MFVec2f")
            return new MFVec2f();
        else if (type == "MFVec3f")
            return new MFVec3f();
        else
            throw new IllegalArgumentException("Unknown field type "+type);
    }

    public static ConstField createConstField(String type) {
        type = type.intern();
        if (type == "SFBool")
            return new ConstSFBool();
        else if (type == "SFColor")
            return new ConstSFColor();
        else if (type == "SFFloat")
            return new ConstSFFloat();
        else if (type == "SFImage")
            return new ConstSFImage();
        else if (type == "SFInt32")
            return new ConstSFInt32();
        else if (type == "SFNode")
            return new ConstSFNode();
        else if (type == "SFRotation")
            return new ConstSFRotation();
        else if (type == "SFString")
            return new ConstSFString();
        else if (type == "SFTime")
            return new ConstSFTime();
        else if (type == "SFVec2f")
            return new ConstSFVec2f();
        else if (type == "SFVec3f")
            return new ConstSFVec3f();
        else if (type == "MFColor")
            return new ConstMFColor();
        else if (type == "MFFloat")
            return new ConstMFFloat();
        else if (type == "MFInt32")
            return new ConstMFInt32();
        else if (type == "MFNode")
            return new ConstMFNode();
        else if (type == "MFRotation")
            return new ConstMFRotation();
        else if (type == "MFString")
            return new ConstMFString();
        else if (type == "MFTime")
            return new ConstMFTime();
        else if (type == "MFVec2f")
            return new ConstMFVec2f();
        else if (type == "MFVec3f")
            return new ConstMFVec3f();
        else
            throw new IllegalArgumentException("Unknown field type "+type);
    }
}
