For 1.20.5
	- Filenames with spaces better handled now - some handling bugs fixed.

	- Textures use proxy loads now, rather than always relying on max texture size value.

	- asserts in classic parser now print line/file to stdout and log files (on OSX) when
	  fatal internal errors happen.

	- x3dv files - memory pointer problem (pointer not zeroed) when parsing META, PROFILE, etc.

	- OcclusionCulling; if a Shape was down some Transforms, it might never get displayed, if
	  its' geometry is changing. Reference John Carlsons' waves.x3d.

	- GeoSpatial nodes: GeoViewpoint, GeoLocation, GeoElevationGrid, GeoCoordinate,
	  GeoOrigin, GeoPositionInterpolator, GeoLOD nodes should be pretty stable.

	- Classic VRML parser had difficulties with field replacements on PROTO invocations,
	  if PROTO invocations were nested. 

	- Threading and Javascript. Now, all initialization happens in same thread as 
	  FreeWRL event loops; it has been determined that there were problems with the Javascript
	  interpreters garbage collection as it is not Javascript context-based, thus was
	  not thread-safe for the scripting methods previously used in FreeWRL.

	- fixed problem with collision and ccw/solid polygons whereby one would collide with
	  the transparent surface, not the visible surface.

For 1.20.4
	- problem parsing floats/doubles with a positive sign starting(or part of exponent),
	  eg, "123e+10" now parses - before expected "123e10".

	- start on Geospatial nodes. GeoLocation, GeoViewpoint and GeoOrigin coded. Note -
	  eventOuts not in code yet, until there are more Geo nodes to test routing with.

	- SFVec3d and MFVec3d code handling added to classic and xml parser.

	- Sensitive nodes can now be partially occluded by other (non-sensitive) geometry.

	- Linux: if iconified, skip all OpenGL rendering calls.

	- modified file-read function to handle files without an end of line character on last 
	  line - some older Microsoft-generated files would cause last line to be lost. 

	- change order of actual DEF node pointer saving so that, within a DEFine, the name can
	  be used. (eg, DEF xx Transform{children Script{field yy USE xx}}

	- Javascript - accessing an MFRotation from a specified SFNode gave an error - now fixed.

	- LOD changed to accept either VRML "level" or X3D "children" fields.

	- Texture files that are located, but are invalid textures, are now reported in a more user-friendly
	  way.

For 1.20.3
	- VisibilitySensors were not properly added to new internal scenegraph code, so were not working
	  reliably.

	- Routing table additions now buffered, and performed at a specific place in event loop; helped
	  a bug where an event generated routing table entries.

	- Javascript createVrmlFromString and createVrmlFromURL had problems with name-cross contamination
	  between caller and created VRML/X3D code.

	- Linux/Motif - ConsoleMessages were not printing properly when running standalone. Had extra copies
	  of data, causing increasing delays when printing lots of information. When running in HTML browser,
	  line breaks were not correct. 

	- use system fonts, if they are installed. (Linux). Check is done at build time and at run time. Look
	  for "FONTSDIR" in the code. If not found, will try the INSTALLDIR, then BUILDDIR.

	- Javascripts - evenOuts (outputOnlys) were generating an event on startup; value was "zero".
	  changed so values initialized, but not "touched", so will not generate initial events.
	  Fields will still generate an initial event, so that field values will be reflected in X3D scene
	  graph.

	- Elevation Grid colors were not working after an earlier texture change; should now
	  work. (affected other polyrep structures, too)
	- OSX plugin change to better handle Anchor to non-x3d pages when running within Safari.

	- OSX - when running non-embedded; will use default browser for html pages, rather than defaulting
	  to Safari.

	- tests  directory, tests/20.wrl changed to show material transparency affecting solid texture.

	- VRML Parser - morphing SF types into MF types (where an MF was expected, but an SF
	  was given) was not correct for SF types with a size > 1 float, eg SFColors. 

	- EAI SF/MFString set/get reworked.
	- EAI setting one value of MF/SF nodes did not work.
	- EAI setting MFStrings had code that could cause memory problems.
	- EAI creating EventInMFVec3f did not work - error in java code Node.java.
	- EAI child to parent link error caused potential loss of node functionality if a removeChild
	  	node was called on a sibling node.

For 1.20.2
	- adjusted the OcclusionCulling parameters to better handle nodes with few pixels
	  visible.

	- Linux Firefox/Opera/Icecape/Mozilla plugin - reworked to prevent a possible
	  synchronization problem at plugin startup.

	- Makefile.PL automatically determines whether we are building on a 64 or 32 bit
	  Linux system, and adjusts build/install paths to suit.

	- ReWire and MIDI nodes on OSX - code now works on OSX 10.5.

	- OSX SoundEngine now detects FreeWRL abnormal shutdowns, and will send a message
	  to the console, and terminate execution.

	- Javascript "initialize()" - if parsing was required (eg, createVrmlFromString)
	  a thread lock would happen. Initialize() call moved out of parse thread to 
	  the callers thread.

	- SphereSensor, PlaneSensor, TouchSensor, CylinderSensor; on Linux, these
	  nodes would continuously send "_changed" events when the nodes were active;
	  now only sends events when values change (and, node is active)

	- ConsoleMessage had a potential memory overrun on large messages; messages
	  truncated if too large.

	- Many, many Javascript changes, especially around SFNode and MFNode implementations.

	- cleanup OSX build; remove redundant installed code from dmg.

	- comment out movie-snapshot code, pending rethink.

	- OSX running within Safari; speaking error messages sometimes hung safari; use
	  "freewrlSystem" call now, instead of "system" - seems to work well. Messages
	  also copied to the console.

	- Nodes with a "bindTime" outputOnly were not sending events correctly; fixed.

	- VRML/Classic - using SF* datatypes where MF* types were expected could lead to
	  invalid data being used - fixed.

	- OSX - use QuickTime/Quartz for image loading, rather than libraries supplied
	  in FeeeWRL dmg package.
 
	- Linux: XLib errors limited to 20; more than that FreeWRL exits. (ideally, no
	  XLib errors would occur; this is just to help in case of failures elsewhere)

For 1.20.1
	- Midi nodes - pan values were reversed. Fixed.

	- polyrep collision with high NavigationInfo speed not working 100%; some changes
	  made, but code still needs debugging.

	- "Sensitive" nature of sensitive nodes would flow up the scenegraph too far, now
	  code verifies that sensitive nodes are indeed registered; branches above sensitive
	  nodes ignored.

	- Collision equations for collision with Polyreps improved by having a quick check
	  to reduce testing on all triangles of distant shapes.

	- Frustum culling was not working on OSX computers - differences in OpenGL headers
	  between Linux and OSX; a #ifdef AQUA added to differentiate.

	- EAI/SAI changes for VRML parser - keep DEFines around between calls of cParse.

	- possible threading issue fixed whereby a script can be called in Routing before parsing has
	  initialized it.

For 1.20.0 (Some came out with 1.19.9 for Linux):
	- Routing to SFImages was broken - tests/Javascript/SFImage.wrl works with new parser.

	- Classic parser - refactor DEF and USE within MF* fields.

	- Linux Sound - changed the maximum number of concurrent sound files to 128.

	- PROTO expansion for SFNodes verified.

	- KeySensor and StringSensor written and tested on OSX and Linux.

	- Javascript SFString events were calling an incorrect Javascript call;
	  changed all JS_NewString calls to JS_NewStringCopyZ.

	- added code in Javascript to enable println command; it is just a copy of print, as most
	  scripts seem to assume that print gives a carrage return.

	- X3DParser reviewed, and parts rewritten 

	- parse (only) x3dv COMPONENT, EXPORT, IMPORT, META, PROFILE statements. Note that currently nothing
	  is done with these statements.

	- VRML,x3dv routing to nodes with both (set_x and x) fields was broken - ensure that we route
	  only to the set_x fields. (same with eventOuts).

	- migrate protos scripts from depreciated eventIn, eventOut, exposedField, initializeOnly to 
	  inputOnly, outputOnly, inputOutput, initializeOnly, but keep backwards compatibility.

	- Javascript via X3D - initializers were not correctly set for X3D types (fixed VRMLC.pm to
	  start at 0, not 7000 for X3DACCESSORS, code required in X3DProtoScript.c)

	- Javascript ADD_ROOT and REMOVE_ROOT commands removed;

	- Javascript garbage collection run when FreeWRL decides, so that gc does not happen
	  in the middle of creating large data types;


For 1.19.9:
	- ECMAscript values when multiple scripts used same textual name reported incorrect
	  values.

	- statusbar now has name or description of mouse over sensitive node. near clipplane
	  moved to help in rendering this.

	- Should now compile on systems without Occlusion Culling in OpenGL.

	- PointLight and SpotLight were not calculated correctly in the Scenegraph.
	  Lighting revisited.

	- VIEWPOINT macro generated invalid addresses for set_bind flag operation.

	- looping through nodes between scenegraph traversals required MUTEX locking.

	- looping through nodes code was not reset properly on reload.

	- changed routing to nodes. with an eventIn the same as an internal field. (eg,
	  Extrusion set_spine and spine). Now these fields are handled before eventloop runs.

	- Javascript field initialization bug - (memory allocation problem) fixed.

	- Linux MIDI code added.

	- SpotLight - bounds checking on some parameters added.

	- OcclusionQueries code revisited so that un-rendered Shape nodes (eg, in Switch statements)
	  do not generate OpenGL errors.

	- Anchors were coded as being "sibling-sensitive" - this has been
	  changed, as they are not. This was causing problems where 2 Anchors were
	  within the same Scene Graph grouping node.

	- potential buffer overflow problem resolved in Anchor node. 
	  see:http://www.securityfocus.com/archive/1/473187

For 1.19.8:
	- Javascript was not thread-safe; should be ok now.

	- Javascript/PROTO MF*nodes also had problems with routing; fixed. (see next fix, below)

	- ROUTE bug for some MF* nodes was fixed in 1.19.7, but fix was edited out
	  from CParseParser.c; re-applied.

	- add/removeChildren routing now done before Scenegraph renders, rather than trying to
	  second guess routes in CRoutes_Register.

	- TouchSensor bug (where the javascript sphere box test would fail) fixed.

For 1.19.7:

	- Javascript MFNode work - should be ok now??

	- work on mouse-sensitive nodes; when they are disabled, mouse does not
	  change shape, and nodes are ignored. Works dynamically; scene graph
	  is pruned when sensitive nodes become disabled.

	- Classic VRML parser routing work.

	- fixed (linux) snapshot arguments in CFrontEnd/fwopts.c 

	- EXTERNPROTOS should be working in "classic" VRML Parser

	- PROTO IS fields now can be nested, and now work properly with SCRIPTS 

	- use GL_ARB_occlusion_query for visibility culling, and VisibilitySensors.
	  Computers that do not have GL_ARB_occlusion_query will not have a 
	  functioning VisibilitySensor.

	- Mipmap textures (PixelTexture and ImageTexture only)

For 1.19.6:
	- MidiControl - work on event routing of values (Strings changed, etc).

	- Javascript - more work on efficiency of eventIn/Outs.

	- Text node work.

	- bug on command-line execution on OS X fixed.


For 1.19.5:
	- more plugin work on Linux and OS X.

	- VRML Parsing - reduce strictness to allow Lightwave VRML output to load.
	  (see comments in CFuncs/CParseLexer.c)

	- Javascript MFString routing - concatenate FreeWRL's MFString nodes to the length that
	  a Javascript MFString eventOut specifies.

	- JAVA EAI/SAI - callbacks expanded to allow for all VRML/X3D data types.

For 1.19.4:
	- Compile changes to allow rpms to be built and distributed for Fedora Core 6;

	- AMD64 browser plugin now compiled by default;

	- Plugin code changed to better locate initial URL;

	- OS X Console work, and plugin work to better handle multiple invocations of FreeWRL.

	- XML parser has had a bit of Javascript coding changes. More required, for non-CDATA
	  script text.

	- Classic parser now looks to see if a Javascript URL is a file name - if it is, it loads the file.

	- Javascript functions that returned strings, were not concatable. This
	  was caused by returning a trailing NULL character (as is usually the case with C strings).
	  This NULL was removed, and eg: print ('the ' + getName() + ' Browser works now');

For 1.19.3:
	- OS X - console messages improved.

	- Makefile.PL - .rpm and .deb package makes updated.

	- add Seamonkey and Firefox as possible browsers in Makefile.PL

	- Classic VRML parser has improved in it's use of Scripts within PROTOs.

	- Linux Plugin code reworked - had problems looking up correct urls for textures, inlines
	  and anchors. Should be better.

	- re-ordered routing field lookups for nodes with both field and eventIn names "same".

	- Java/ecmascript:
	 	- fixes and tests for most MF* nodes.
		- addRoute / deleteRoute now works with new parser formats.
		- replaceWorld() works with new parsers.
		- createVrmlFromString() verified.
		- getName() verified.
		- getVersion() verified.
		- getCurrentSpeed() verified.
		- getCurrentFrameRate() verified.
		- getWorldURL() verified.
		- loadURL() verified.
		- createVrmlFromUrl() verified.

	- ReWire/Midi:
		- added following Javascript functions:
			getMidiDeviceList()
			getMidiDeviceInfo(x)
			getMidiControlMin(x,y)
			getMidiControlMax(x,y)
			getMidiControlNumber(x,y)


For 1.19.2:

	- let scripts start with whitespace before the "vrmlscript".

	- prints error message when user attempts to parse VRML version 1 files.

	- various VRML parser error messages changed to help point users to correct
	  area of input file (ongoing work)

	- -DDEBUG_MALLOC for finding malloc problems;
	
	- MALLOC, REALLOC, automatically check malloc return values; exit if NULL found with file/line number.

	- chcon command added to Makefile.PL

	- #include <stdlib> added to headers.h - for AMD64 compiles.

	- code to purge malloc'd memory (in scenegraph)  on reload added to FreeWRL.

	- bug in VRML parser fixed - routing to "set_scale" in nodes without a "set_scale" eventIn now working.
	  (and, other nodes with a similar pattern, where a "set_X" or "X_changed" field exists in some other
	  node, but not the current node, is fixed)

	- Spotlight, PointLight handling problem - was not being ignored by "normalChildren()". 

	- Collision code changed to NOT malloc/free for each node; now a pool of memory is mallocd that
	  is used for all collision code. Helps speed collision detection calculations, especially on
	  nodes with a large dataset, that caused mutex locking and virtual memory slowdowns.

For 1.18.15:
	- working on spot and directional Lights.

	- headlight moved to 100 behind current camera postion, makes for smoother
	  shading of triangles whose vertexen are at corners (or out of view) of current
	  view frustum

	  PixelTexture nodes - default image caused a segfault
For 1.18.14:
	- setting SFNodes from Javascript fixed. (was setting node to NULL)

	- X3DParser - SFStrings were not being copied correctly.

	- Textures - if <=256x256, GL_LINEAR, else GL_NEAREST

	- Background - fixed bug where groundColors > #groundAngles - make last angle PI.
	  (John Stewart)

	- reading large files - malloc now bufsize<<=1 to make reading linear, not quadratic.
	  (Charles Horn, Daniel Kraft)

	- VRML parser malloc bug for storing values in Vectors fixed.
	  (Daniel Kraft)

	- fixed material transparency in VRML Proto expansions
	  (John Stewart)

	- added initial ReWire (EAI in C) support.
	  (John Stewart)

	- OS X UI issues 
	  (Sarah Dumoulin)

For 1.18.13:
	- browser plugin code manipulation - improve loading of secondary files on local
	  (non-networked) machines.

	- texture, if 3 or 4 channels, ignores the diffuseColor (X3D Spec 17.2.2.3)

For 1.18.12:
	- Makefile.PL - DESTDIR in install tags for Gentoo build. (Hanno Bock)

	- soundengine work for 64 bit compiles. (Charles Horn)

	- change GL_LIGHT_MODEL_AMBIENT to 0,0,0,1 - removes default "scene" ambient lighting.

For 1.18.11:
	- OSX Build work.

	- New X3D Parser - does not yet handle:
		Scripts
		PROTOS
		EXTERNPROTOS
		PixelTextures.

	- SFColorSetHSV and SFColorGetHSV

For 1.18.10:
	- reviewing Javascript interfacing. Most SF* nodes should now pass
	  correctly.

	- ambientIntensity - Shape material now uses the ambientIntensity value,
	  and lights set ambientIntensity as per their node values, now.

	- PointLight status now same as other lights - uses lightState.

	- memory corruption in "default MF*" values fixed in createNewX3DNode.

	- memory leak in OcclusionQueries fixed.

	- some minor parser problems fixed. (some more identified)

	- fixed problem in *Background nodes when sky and ground entries were empty

	- X3dToVrml97.xslt changed - it was adding EXTERNPROTOS for 
	  nodes supported in FreeWRL.

	- Textures had a threading issue - registration code rewritten.

	- MovieTexture did not work with the new parser; fixed.

	- Makefile.PL - javascript library not copied over - fixed.

For 1.18.9:
	- no perl parser at all.

	- perl runtime code removed.

	- XLib error handler.

	- New Makefile.PL and new build process.
		- build revamp in progress - 1.18.9 has better linking on linux as
		  compared to 1.18.8 and earlier.



For 1.18.5:
	- Sound and AudioClip nodes should work again - problem with add_first and
	  these nodes.

	- EAI/SAI should be close to working.

For 1.18.4:
	- javascript code that calls perl being rewritten.
		(tests/52 added - uses createVrmlFromURL)

	- bug in OpenGL window size fixed. (affected TouchSensors)

For 1.18.3: Firefox plugin code -at least now it brings FreeWRL up. Have big problem
	with reparenting FreeWRL window - fails at plugin XFlush call.

For 1.18.2:
	- Desktop integration on Linux platforms. (Sarah Dumoulin)

	- more automated build in Makefile.PL (John Stewart) to better handle
	  Motif library inclusion. (including code rewrites in CFrontEnd)

For 1.18.1:
	- more PROTO work for experimental parser (Daniek Kraft)

	- Linux browser plugin reverified; should now work quite well!

	- command line invocation of http:// files restored. (was broken in 1.17).

	- remove requirement for GLwDrawA.h.


For 1.17.7:
	- javascript problem creating some nodes that had FreeWRLPTR defined fields fixed.

For 1.17.6;
	- now scans scientific notation floats correctly.

For 1.17:
	- new menubar operation, can be compiled without it. 

	- shape compiler thread, if supported by OS.

	- strncmp #ifdef deleted from code; made our function the default

	- SAI code changes (modifies EAI and interfaces in Browser.pm)

	- added EAI/SAI *ColorRGBA types

	- much work in making the Perl parser output use the SAI/EAI creation code;
	  this allows for code reduction, and for verification of EAI/SAI process.

For 1.16:
	- VisibilitySensor

	- bug in DirectionalLight rend fixed.

	- bug in script invocation - scripts are now initiated when routing entries
	  are made, not when first invoked.

	- H-Anim nodes being worked on.

	- Geometry2D nodes complete.

	- streamlining build and rendering process by reducing amount of C code in
	  VRMLRend.pm and VRMLC.pm

	- bug in IndexedFaceSet rendering fixed - degenerate triangle finding changed
	  so that all triangles are looked at in a face, and the one with the longest
	  vector length is the one chosen to represent the normal of that face.

	- re-arranged the CFuncs directory to better follow X3D Spec.

	- added nodes to the "topNodes" field - some warnings were printed for correct
	  scenegraphs pertaining to what nodes were allowed as root nodes.

	- reworked texture coordinates for Extrusion and ElevationGrid to handle Multi
	  Texture nodes (MultiTextureTransform, TextureCoordinateGenerator, etc...)

	- New nodes: 
		- TextureCoordinateGenerator node.
		- StaticGroup node.
		- TextureBackground node.
		- LoadSensor node. (has problems with Scripts)

	- EAI complete.



For 1.15:
	- Fixed dynamic linker bug with OSX 10.4.3

	- removed get3 and get2 method calls, leading to better error messages when
	  unexpected children are found in VRML code.

	- tagged all nodes with a unique type identifier, leading to better error
	  messaging at runtime for code with generated nodes.
	
	- MultiTextureTransform node support.

	- Sphere solid flag now works.

	- "Endian" bug fixed in Binding stack code.

	- collision turned off by default as it affected conformance; some of the
	  Web3D Interchange profile conformance tests assumed that the viewpoint was
	  within a primitive shape.

	- IndexedLineSet, LineSet, and PointSet  nodes up to spec compliance.

	- MultiTexture node support.

	- Ambient intensity light bug fixed.

	- X3D - duplicate DEFs now flagged.

	- parse META, PROFILE, COMPONENT in VRML encoded X3D files.

	- support for building rpms in Makefile.PL.

	- status bar updated to reduce size and increase information.

	- Threading problem in ProdCon fixed - mainly seen in EAI code.
	
	- Added NavigationInfo speed field values to FLY mode rotations and
	  translations.

	- fixed bug in Javascript invocation dealing with multi float
	  (3F, 4F) values. 

For 1.13:
	- Now use freely distributable font files. See the README in the
	  fonts directory.

	- EXTERNPROTOS can now reference PROTOS in the Extern'd file.

	- freewrlSystem now keeps a list of children; on doQuit it attempts
	  to remove these children from the system with a kill (child,SIGINT).
	  This solves a problem where wget can hang and leave the freewrl 
	  display thread around.

	- fixed a problem that caused add/remove children from EAI and
	  scripts to fail (segfault)

	- revised error messages where some field values are incorrect;
	  eg, putting a TextureCoord as a coord field of an IndexedFaceSet
	  now displays a more informative message.

	- Builds on 64 bit processors. Some scripting/EAI/CLASS links not
	  yet correct.

	- ColorRGBA nodes supported for IndexedFaceSet, and equiv. NOT
	  supported in scripting/eai yet.

	- updated Javascript version - new Mozilla SpiderMonkey version
	  is 1.5.

	- Javascripting - MF nodes and script to script routing now is
	  much better (may still be bugs, but it works for my tests)

	- EAI code changed so that the current Browser timestamp is
	  delivered to the EAI side of things. Right now, the EAI
	  java code (EAIinThread.java) reads and parses this time 
	  value, but does not do anything with it.

	- added all Triangle nodes - code was written in less than a 
	  day, so bugs may exist - it does however run the X3D Triangle
	  conformance tests successfully.

	- EAI EventOutMFFloat, EventOutMFVec2f, EventOutMFVec3f,
	  EventOutMFColor, EventOutMFRotation EventOutMFInt32 all revisited.

	- X3D - initial support for containerField.
