********************************
 Filename:      README.config
 Software:      FreeWRL
 Locker:        freewrl_v0.35

Last Updated:	11/8/2002 alexp

********************************

VOLUMES IN LOCKER:

        Volume                  Mounted at       Replicated?
        -------                 ----------       -----------
        sw.freewrl_v0.35        top level        No

LINKS TO VOLUMES/LOCKERS:

        None; a number of helper binaries and libs are installed in the locker

CHANGES FOR ATHENA:

	Just a shared wrapper script that sets some required environment
        variables- notably PERL5LIB, which allows it to find extra Perl
        modules. We build "in place", with separate copies of the Sun and
        Linux releases, below
        /mit/freewrl_v0.35/distrib/$ATHENA_SYS/FreeWRL-0.35. The extra
        Perl modules are put below
        /mit/freewrl_v0.35/distrib/sun4x_58/perl-mods

PROGRAMS IN LOCKER:

	FreeWRL VRML97 viewer- with Java and xml functionality included

STARTUP SCRIPT:

    DESCRIPTION
        The freewrl startup script is written as a wrapper program which
	parses arguments and then invokes the author's Perl launch script,
        in /mit/freewrl_v0.35/distrib/$ATHENA_SYS/FreeWRL-0.35.

MAINTENANCE NOTES:

Building FreeWRL is a big job. Detailed notes are below. It's easier on Linux
since that's the primary build platform. It appears to not have been tested
by the authors on Sun since many little problems prevent a successful build.
On Sun, we need to link against a number of libraries in /usr/athena/lib;
Java is also needed (1.4.0_01 was used during the build and
"add -f java_v1.4.0_01" was used to put it on the path. gcc was used to
compile, and gmake (as opposed to make) is required for a successful
build. The Sun version needs to have "convert" from the ImageMagick
distribution installed. Fortunetely, a suitable Solaris binary release (5.5.1)
was found on the Net.

The Linux version seems to work OK with the default libGL.so in the Athena
release, so we're not using the version in the mesa locker at the moment.

Building FreeWRL 0.35 on Solaris:

add gnu, -f java_v1.4.0_01.

setenv JAVA_HOME to /afs/athena/software/java_v1.4.0_01/distrib/home

Create directory /mit/freewrl_v0.35/distrib/sun4x_58/perl-mods for locally
installed extra Perl modules; get from the net:

Digest-MD5-2.09.tar.gz
HTML-Parser-2.25.tar.gz
MIME-Base64-2.11.tar,gz
URI-1.04.tar.gz
libnet-1.0607.tar,gz
libwww-perl-5.47.tar.gz
Image-Base-1.07.tar.gz

Untar these in a temp location;  setenv PERL5LIB to:

/mit/freewrl_v0.35/distrib/sun4x_58/perl-mods/lib/site_perl/5.6.1:/mit/freewrl_v0.35/distrib/sun4x_58/perl-mods/lib/site_perl/5.6.1/sun4-solaris.

For each untarred Perl module, run, from the top level directory:

perl Makefile.PL PREFIX=/afs/athena/software/freewrl_v0.35/distrib/sun4x_58/perl-mods
gmake
gmake install

in same order as above.

Put in /mit/freewrl_v0.35/arch/sun4x_58, "convert" and "libMagick-5.5.1.so",
used by convert, from ImageMagick-sparc-sun-solaris2.9.tar.gz obtained from
the net.

Untar FreeWRL-0.35.tar at /mit/freewrl_v0.35/distrib/sun4x_58.

Edit vrml.conf at top level with the folowing settings:

FREEWRL_LIBS => '-L/usr/athena/lib -lGL -lGLU -lXext -lX11 -lfreetype -lpng -lz -ljpeg',
FREEWRL_INC => '-I/usr/athena/include/ -I/usr/athena/include/freetype2 -I/usr/athena/include/freetype2/freetype -I/usr/athena/include/freetype2/freetype/config',

JS_LIBS => '-L/mit/freewrl_v0.35/distrib/sun4x_58/FreeWRL-0.35/JS/js/SunOS5.8_DBG.OBJ -ljs',
JS_INC => '-I/mit/freewrl_v0.35/distrib/sun4x_58/FreeWRL-0.35/JS/js/SunOS5.8_DBG.OBJ',

JAVA_INST => '/afs/athena/software/java_v1.4.0_01/distrib/home',
JAVA_INC => '-I/afs/athena/software/java_v1.4.0_01/distrib/home/include -I/afs/athena/software/java_v1.4.0_01/distrib/home/include/solaris'

and leave SAXON_LOC empty.

run perl Makefile.PL PREFIX=/mit/freewrl_v0.35/distrib/sun4x_58/FreeWRL-0.35 /at the top level.

In ../JS/js/config, make link SunOS5.8.mk -> SunOS5.5.1.mk and in line 44
of the latter, change "ULTRA_OPTIONSD := -DULTRA_SPARC" to "ULTRA_OPTIONSD :=".

cd to ../FreeWRL-0.35/JS/js, run gmake, cd ../..

Now rerun perl Makefile.PL PREFIX=/mit/freewrl_v0.35/distrib/sun4x_58/FreeWRL-0.35 at the top level. Don't worry about error: "make: Fatal error in reader:
Makefile, line 23: Unexpected end of line seen"

Edit ../FreeWRL-0.35/CFuncs/SoundEngineClient.c, adding the following lines
at the top of the file to avoid compilation errors:

#define WNOHANG         0x00000001
extern char *sys_errlist[];
extern int sys_nerr;

Edit ../FreeWRL-0.35/Plugin/CFuncs/pluginSocket.c, adding the following lines
at the top of the file to avoid compilation errors:

#define F_SETSIG        10      /*  for sockets. */
#define F_GETSIG        11      /*  for sockets. */
#define FIOASYNC        0x5452
#define FIONBIO         0x5421

Edit ../FreeWRL-0.35/Plugin/netscape/source/npfreewrl.c line 1230, commenting
out "io_flags |= O_ASYNC;", and adding the following line at the top of
the file:

#define AF_LOCAL	1	/* POSIX name for AF_UNIX	*/

Edit ../FreeWRL-0.35/CFuncs/mpeg.h, commenting out at line 59:

typedef int INT32;
typedef short INT16;
typedef char INT8;

to avoid compilation errors.

Edit ../FreeWRL-0.35/JS/Makefile, adding to CCFLAGS:

-I/afs/athena.mit.edu/software/freewrl_v0.35/distrib/sun4x_58/FreeWRL-0.35/JS/js
to avoid compilation errors.

Edit ../FreeWRL-0.35/Plugin/netscape/Makefile, adding to link flags (after
"-shared" near bottom): "-mimpure-text", and changing "OSNAME:=linux" to
"OSNAME:=solaris" to avoid compilation errors (this won't produce a working
plugin but is necessary to allow the build to complete).

From the top level, type gmake. It will report many OpenGL redefinitions,
but it will build and should run properly.

Building FreeWRL 0.35 on Linux:

add java_v1.4.0_01, and build Perl modules analogously to Sun- setenv PERL5LIB
to:

/mit/freewrl_v0.35/distrib/i386_linux24/perl-mods/lib/site_perl/5.6.1:/mit/freewrl_v0.35/distrib/i386_linux24/perl-mods/lib/site_perl/5.6.1/i686-linux.

Edit vrml.conf at top level with these settings:

OPENGL_INC => '-I/usr/X11R6/include/'
FREEWRL_LIBS => '-L/usr/lib -L/usr/X11R6/lib -L/usr/athena/lib -lGL -lGLU -l
Xext -lX11 -lXxf86vm -lfreetype -lpng -lz -ljpeg',
FREEWRL_INC => '-DXF86V4 -I/usr/athena/include/ -I/usr/athena/include/freety
pe2 -I/usr/athena/include/freetype2/freetype -I/usr/athena/include/freetype2/freetype/config',

JS_LIBS => '-L/mit/freewrl_v0.35/distrib/i386_linux24/FreeWRL-0.35/JS/js/Lin
ux_All_DBG.OBJ -ljs',
JS_INC => '-I/mit/freewrl_v0.35/distrib/i386_linux24/FreeWRL-0.35/JS/js/Linu
x_All_DBG.OBJ',

JAVA_INST => '/afs/athena/software/java_v1.4.0_01/distrib/home',
JAVA_INC => '-I/afs/athena/software/java_v1.4.0_01/distrib/home/include/linu
x'

Follow "standard" build instructions, omitting modifications for Sun except
this:

Edit ../FreeWRL-0.35/JS/Makefile, adding to CCFLAGS:

-I/afs/athena.mit.edu/software/freewrl_v0.35/distrib/i386_linux24/FreeWRL-0.35/JS/js to avoid compilation errors.

For Linux, "make" can be typed instead of "gmake". The Netscape plugin
can be built (by running Makefile in the
/mit/freewrl_v0.35/distrib/i386_linux24/FreeWRL-0.35/Plugin/netscape
directory) but it won't work properly.

Building x3d support:

Linux:

Install libxslt-1.0.10-1.i386.rpm and libxslt-devel-1.0.10-1.i386.rpm from
FreeWRL site; move the libraries and includes from installed location to
/mit/freewrl_v0.35/lib and /mit/freewrl_v0.35/lib (these are platform-
dependent, use AFS @sys links). libxml2-2.4.13-1.i386.rpm and
libxml2-devel-2.4.13-1.i386.rpm are not necessary because these files are
in /usr/athena/lib, /usr/athena/include (also in RedHat 7.3 release). Files
ending in .la have installation locations that need editing- also files
xsltConf.sh and possibly libxslt.pc, although they probably don't get used.

A few binaries go in /mit/freewrl_v0.35/bin (uses @sys link).

Includes go in /mit/freewrl_v0.35/include/libexslt
                                          libxslt respectively; a link:
/mit/freewrl_v0.35/include/libxml/ -> /usr/athena/include/libxml2/libxml
is needed for compilation of libxml2 dependent Perl code.

Before building Perl stuff, setenv LD_LIBRARY_PATH to
/usr/athena/lib:/mit/freewrl_v0.35/lib. Install in a temporary location:

XML-NamespaceSupport-1.08.tar.gz
XML-SAX-0.11.tar.gz
XML-LibXML-1.31.tar.gz
XML-LibXSLT-1.31.tar.gz

And install these, in order, by running in the top level dir of each:

perl Makefile.PL PREFIX=/afs/athena/software/freewrl_v0.35/distrib/i386_linux24/perl-mods LIBS='-L/mit/freewrl_v0.35/lib' INC='-I/mit/freewrl_v0.35/include'
make
make install

Note that the first 2 are not the same as those give in FreeWRL x3d docs-
those won't work right (missing dependencies). SAX-Base is not used.

There will be a problem building XML-LibXML-1.31: it reports "libxml2
not found" but then completes the build anyway. This comes back on the
Sun build...

Sun:

Install libxml, libxslt libraries from http://garypennington.net/libxml2:

lxml2-2.4.25-sol8-sparc-local
lxslt-1.0.21-sol8-sparc-local

by running, as root, pkgadd -d <file>. Move these below /mit/freewrl_v0.35
analogously to Linux. libexslt, libxslt subdirectories go below
/mit/freewrl_v0.35/include; the actual libxml includes go below
/mit/freewrl_v0.35/include/libxml; they may need to be moved up a level
or two from below libxml2.

Install XML-NamespaceSupport-1.08, XML-SAX-0.11 as for Linux. XML-LibXML-1.3
will fail, complaining about "libxml2 not found" in spite of fact that it's
there. To get around this, comment out the test clause for this in
Makefile.PL (starting at line with "if (!have_library("xml2")) {". This
will allow build and install to proceed. Then install XML-LibXSLT-1.31.

File ../FreeWRL-0.35/tests/helpers/vts.jpg needed by the xml demo was
missing. It was located on the Web with Google and copied in.





